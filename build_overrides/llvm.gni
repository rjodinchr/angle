declare_args() {
  llvm_have_mallinfo2 = false
}

llvm_root_dir = "//third_party/llvm/src/"
llvm_root_gen_dir = "${root_gen_dir}/third_party/llvm/src/"

import("//build/config/clang/clang.gni")
import("//build/config/sysroot.gni")
import("//build/config/compiler/compiler.gni")

llvm_compiled_action_bin_dir = ""

shared_binary_target_configs = [
  "${llvm_root_dir}llvm/utils/gn/build:compiler_defaults",
  "${llvm_root_dir}llvm/utils/gn/build:llvm_code",
  "${llvm_root_dir}llvm/utils/gn/build:no_exceptions",
  "${llvm_root_dir}llvm/utils/gn/build:no_rtti",
  "${llvm_root_dir}llvm/utils/gn/build:thin_archive",
  "${llvm_root_dir}llvm/utils/gn/build:warn_covered_switch_default",
]
shared_binary_target_configs += default_compiler_configs
shared_binary_target_configs -= [ "//build/config/compiler:chromium_code" ]

template("llvm_executable") {
  executable(target_name) {
    forward_variables_from(invoker, "*")
  }
}

template("llvm_loadable_module") {
  loadable_module(target_name) {
    forward_variables_from(invoker, "*")
  }
}

template("llvm_static_library") {
  static_library(target_name) {
    forward_variables_from(invoker, "*")
  }
}

template("llvm_shared_library") {
  shared_library(target_name) {
    forward_variables_from(invoker, "*")
  }
}

template("llvm_source_set") {
  source_set(target_name) {
    forward_variables_from(invoker, "*")
  }
}

set_defaults("llvm_executable") {
  configs = shared_binary_target_configs
}
set_defaults("llvm_loadable_module") {
  configs = shared_binary_target_configs
}
set_defaults("llvm_static_library") {
  configs = shared_binary_target_configs
}
set_defaults("llvm_shared_library") {
  configs = shared_binary_target_configs + [ "${llvm_root_dir}llvm/utils/gn/build:zdefs" ]
}
set_defaults("llvm_source_set") {
  configs = shared_binary_target_configs
}
